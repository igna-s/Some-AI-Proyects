{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyPwRnX+n1ypTZAR60+EO3d3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["IA para predecir Caras -Keras"],"metadata":{"id":"OleH2N0TBAJX"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6w1Ij8Rc_nId","executionInfo":{"status":"ok","timestamp":1740337592817,"user_tz":180,"elapsed":12119,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"df020eb1-4874-4efa-9c11-e3d86b845cb9"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-02-23 19:06:20--  https://www.dropbox.com/s/si11cws2pyho1bp/archive.zip\n","Resolving www.dropbox.com (www.dropbox.com)... 162.125.1.18, 2620:100:6016:18::a27d:112\n","Connecting to www.dropbox.com (www.dropbox.com)|162.125.1.18|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://www.dropbox.com/scl/fi/x9eaye2fanuc005ucprmq/archive.zip?rlkey=fawlx24mxtnicc8f65kd5ufap [following]\n","--2025-02-23 19:06:20--  https://www.dropbox.com/scl/fi/x9eaye2fanuc005ucprmq/archive.zip?rlkey=fawlx24mxtnicc8f65kd5ufap\n","Reusing existing connection to www.dropbox.com:443.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com/cd/0/inline/CkvQXxl9lAqtHdXqz0UcuIWxm7AKhQ9pZhsAiN-sVVISE2yyHCeZg517DO4oBDKx5JhiaLSBjEyGhR5Yc-8L7xXbioJZ2dXG0CrlM-yeDhOpJXMnFZ5Evjrd3T_13szvpxGgtNLnDL5FHaTO-aWDsllL/file# [following]\n","--2025-02-23 19:06:21--  https://uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com/cd/0/inline/CkvQXxl9lAqtHdXqz0UcuIWxm7AKhQ9pZhsAiN-sVVISE2yyHCeZg517DO4oBDKx5JhiaLSBjEyGhR5Yc-8L7xXbioJZ2dXG0CrlM-yeDhOpJXMnFZ5Evjrd3T_13szvpxGgtNLnDL5FHaTO-aWDsllL/file\n","Resolving uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com (uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com)... 162.125.2.15, 2620:100:6016:15::a27d:10f\n","Connecting to uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com (uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com)|162.125.2.15|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: /cd/0/inline2/CktB9-TnAxGVgjEX35PiU9_TntWaJXuolxxYJFqeTdA1FG8TMwPH74G-5t5Q1NpP03-73XmbpZDRmtSptCYcSYB2c_wmc4V12Wtols3Hv3Dv4IsU_Fm7jd8BS5pN4FvrV7NM7Sz9XxDuifdPuIvJm7r3q2Tp9GwR-y-efydCDqqeiQ-EMqseFhHARgW7IksUquV-mKYuwnVcCODnWWj7xaPM64l6RjIkkVHa67XfWaot45ICYX3YobwODdeMh4mTQYx3lOhDFSHTFYj33jcbPZKaNjh7BNoubcF47PXNSRyR-l_2mZaR1InlK6V4_nwJNvUsiAisneJAmNuSPnTMTvRAN8dVxfsaqpxpJTzlnvXw0Wh6l5rEMkNSwrYKY9hyaAU/file [following]\n","--2025-02-23 19:06:22--  https://uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com/cd/0/inline2/CktB9-TnAxGVgjEX35PiU9_TntWaJXuolxxYJFqeTdA1FG8TMwPH74G-5t5Q1NpP03-73XmbpZDRmtSptCYcSYB2c_wmc4V12Wtols3Hv3Dv4IsU_Fm7jd8BS5pN4FvrV7NM7Sz9XxDuifdPuIvJm7r3q2Tp9GwR-y-efydCDqqeiQ-EMqseFhHARgW7IksUquV-mKYuwnVcCODnWWj7xaPM64l6RjIkkVHa67XfWaot45ICYX3YobwODdeMh4mTQYx3lOhDFSHTFYj33jcbPZKaNjh7BNoubcF47PXNSRyR-l_2mZaR1InlK6V4_nwJNvUsiAisneJAmNuSPnTMTvRAN8dVxfsaqpxpJTzlnvXw0Wh6l5rEMkNSwrYKY9hyaAU/file\n","Reusing existing connection to uc4d22a4650a09ef3b9f61086fb5.dl.dropboxusercontent.com:443.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 63252113 (60M) [application/zip]\n","Saving to: ‘archive.zip’\n","\n","archive.zip         100%[===================>]  60.32M  26.0MB/s    in 2.3s    \n","\n","2025-02-23 19:06:25 (26.0 MB/s) - ‘archive.zip’ saved [63252113/63252113]\n","\n"]}],"source":["#Descargo y descomprimo dataset\n","!wget https://www.dropbox.com/s/si11cws2pyho1bp/archive.zip\n","!unzip -q \"/content/archive.zip\""]},{"cell_type":"code","source":["# Importo  librerias necesarias\n","import tensorflow as tf\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from pathlib import Path\n","\n","tf.random.set_seed(4)"],"metadata":{"id":"-2f0G4Y8BHhb","executionInfo":{"status":"ok","timestamp":1740337605301,"user_tz":180,"elapsed":12479,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Crear PATH para los datos de entrenamiento y testeo\n","train_path = Path(\"/content/train\")\n","test_path = Path(\"/content/test\")"],"metadata":{"id":"noZJnY9GBNAk","executionInfo":{"status":"ok","timestamp":1740337605311,"user_tz":180,"elapsed":7,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Obtener las rutas de las imágenes de entrenamiento\n","train_image_paths = list(train_path.glob(\"*/*\"))\n","train_image_paths = list(map(lambda x : str(x) , train_image_paths))\n","\n","train_image_paths[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"etr7vK8HBQho","executionInfo":{"status":"ok","timestamp":1740337605682,"user_tz":180,"elapsed":366,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"88475472-6ad8-4ee1-cc4e-98068b7f287f"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['/content/train/happy/Training_3723238.jpg',\n"," '/content/train/happy/Training_12558365.jpg',\n"," '/content/train/happy/Training_5729449.jpg',\n"," '/content/train/happy/Training_61263386.jpg',\n"," '/content/train/happy/Training_80485124.jpg',\n"," '/content/train/happy/Training_38419695.jpg',\n"," '/content/train/happy/Training_98328383.jpg',\n"," '/content/train/happy/Training_56252439.jpg',\n"," '/content/train/happy/Training_25811237.jpg',\n"," '/content/train/happy/Training_38289519.jpg']"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Obtener las etiquetas a partir de las rutas\n","\n","def get_label(image_path):\n","    return image_path.split(\"/\")[-2]\n","\n","train_image_labels = list(map(lambda x : get_label(x) , train_image_paths))\n","train_image_labels[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"njihUc3bBWlY","executionInfo":{"status":"ok","timestamp":1740337605786,"user_tz":180,"elapsed":99,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"991073e4-efa3-474b-ea96-94cd0c3c7caa"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy',\n"," 'happy']"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Codificar las etiquetas con LabelEncoder\n","from sklearn.preprocessing import LabelEncoder\n","\n","Le = LabelEncoder()\n","train_image_labels = Le.fit_transform(train_image_labels)\n"],"metadata":{"id":"XlHtqjjABcrt","executionInfo":{"status":"ok","timestamp":1740337606255,"user_tz":180,"elapsed":468,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Convertir las etiquetas en codificación one-hot\n","train_image_labels = tf.keras.utils.to_categorical(train_image_labels)\n","\n","train_image_labels[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J5PGMiYrBe71","executionInfo":{"status":"ok","timestamp":1740337606448,"user_tz":180,"elapsed":170,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"a1dc7538-da2d-4358-b4d6-f4208de67323"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0.]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Dividir los datos en entrenamiento y validación\n","Train_paths , Val_paths , Train_labels , Val_labels = train_test_split(train_image_paths , train_image_labels , test_size = 0.25)\n","\n","Train_paths[:10] , Train_labels[:10]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ayV_2WJ3BhyM","executionInfo":{"status":"ok","timestamp":1740337606848,"user_tz":180,"elapsed":398,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"1cf4900e-6273-4462-fe2d-e46c51b280af"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(['/content/train/sad/Training_23859785.jpg',\n","  '/content/train/neutral/Training_61331511.jpg',\n","  '/content/train/sad/Training_19910438.jpg',\n","  '/content/train/neutral/Training_59343096.jpg',\n","  '/content/train/surprise/Training_59989870.jpg',\n","  '/content/train/surprise/Training_67571165.jpg',\n","  '/content/train/happy/Training_47939966.jpg',\n","  '/content/train/happy/Training_99956118.jpg',\n","  '/content/train/happy/Training_52285255.jpg',\n","  '/content/train/neutral/Training_58904594.jpg'],\n"," array([[0., 0., 0., 0., 0., 1., 0.],\n","        [0., 0., 0., 0., 1., 0., 0.],\n","        [0., 0., 0., 0., 0., 1., 0.],\n","        [0., 0., 0., 0., 1., 0., 0.],\n","        [0., 0., 0., 0., 0., 0., 1.],\n","        [0., 0., 0., 0., 0., 0., 1.],\n","        [0., 0., 0., 1., 0., 0., 0.],\n","        [0., 0., 0., 1., 0., 0., 0.],\n","        [0., 0., 0., 1., 0., 0., 0.],\n","        [0., 0., 0., 0., 1., 0., 0.]]))"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Como el dataset esta desvalanceado, agrego pesos de clases\n","\n","classTotals = Train_labels.sum(axis=0)\n","classWeight = classTotals.max() / classTotals\n","\n","class_weight = {e : weight for e , weight in enumerate(classWeight)}\n","print(class_weight)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8BpmVi3IBojA","executionInfo":{"status":"ok","timestamp":1740337606873,"user_tz":180,"elapsed":21,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"96d39da6-39ac-427c-8dc1-bead4bf858e9"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 1.783040741967539, 1: 16.512269938650306, 2: 1.7777410832232496, 3: 1.0, 4: 1.4343192112976286, 5: 1.4731800766283525, 6: 2.2732263513513513}\n"]}]},{"cell_type":"code","source":["# Función para cargar y decodificar imágenes\n","\n","def load(image, label):\n","    image = tf.io.read_file(image)\n","    image = tf.io.decode_jpeg(image, channels=3)\n","    return image, label\n"],"metadata":{"id":"Mp8WKn25Bwdb","executionInfo":{"status":"ok","timestamp":1740337606899,"user_tz":180,"elapsed":20,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Constantes\n","IMG_SIZE = 96\n","BATCH_SIZE = 32\n","\n","# Redimensionar las imágenes al tamaño definido por el modelo\n","resize = tf.keras.Sequential([\n","    tf.keras.layers.Resizing(IMG_SIZE, IMG_SIZE)\n","])\n","\n","# Alteracion de datos para mejorar la generalización del modelo\n","data_augmentation = tf.keras.Sequential([\n","    tf.keras.layers.RandomFlip(\"horizontal\"),\n","    tf.keras.layers.RandomRotation(0.1),\n","    tf.keras.layers.RandomZoom(height_factor = (-0.1, -0.05))\n","])"],"metadata":{"id":"mcFC2YuvB3AL","executionInfo":{"status":"ok","timestamp":1740338486203,"user_tz":180,"elapsed":284,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Crear el objeto Dataset de TensorFlow\n","AUTOTUNE = tf.data.experimental.AUTOTUNE\n","def get_dataset(paths , labels , train = True):\n","    image_paths = tf.convert_to_tensor(paths)\n","    labels = tf.convert_to_tensor(labels)\n","\n","    image_dataset = tf.data.Dataset.from_tensor_slices(image_paths)\n","    label_dataset = tf.data.Dataset.from_tensor_slices(labels)\n","\n","    dataset = tf.data.Dataset.zip((image_dataset , label_dataset))\n","\n","    dataset = dataset.map(lambda image , label : load(image , label))\n","    dataset = dataset.map(lambda image, label: (resize(image), label) , num_parallel_calls=AUTOTUNE)\n","    dataset = dataset.shuffle(1000)\n","    dataset = dataset.batch(BATCH_SIZE)\n","\n","    if train:\n","        dataset = dataset.map(lambda image, label: (data_augmentation(image), label) , num_parallel_calls=AUTOTUNE)\n","\n","    dataset = dataset.repeat()\n","    return dataset"],"metadata":{"id":"Jw4RvPLECFh3","executionInfo":{"status":"ok","timestamp":1740338488990,"user_tz":180,"elapsed":39,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Crear el dataset de entrenamiento\n","%time train_dataset = get_dataset(Train_paths , Train_labels)\n","\n","# Verificar forma\n","image , label = next(iter(train_dataset))\n","print(image.shape)\n","print(label.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5smAJZzCJd_","executionInfo":{"status":"ok","timestamp":1740338493371,"user_tz":180,"elapsed":2530,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"82dad812-44ea-4224-866c-a79b58507a32"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 1.34 s, sys: 53.8 ms, total: 1.39 s\n","Wall time: 1.98 s\n","(32, 96, 96, 3)\n","(32, 7)\n"]}]},{"cell_type":"code","source":["# Visualizar una imagen de muestra\n","print(Le.inverse_transform(np.argmax(label , axis = 1))[0])\n","plt.imshow((image[0].numpy()/255).reshape(96 , 96 , 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"U28yN3MaCWJJ","executionInfo":{"status":"ok","timestamp":1740338493612,"user_tz":180,"elapsed":237,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"aa4d6eb6-d66b-44e8-f584-7a1fcb23c73e"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["fear\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fd6b2d4dc90>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Crear el dataset de validacion\n","%time val_dataset = get_dataset(Val_paths , Val_labels , train = False)\n","\n","# Verificar forma\n","image , label = next(iter(val_dataset))\n","print(image.shape)\n","print(label.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EnsK8g59CZ8e","executionInfo":{"status":"ok","timestamp":1740338493979,"user_tz":180,"elapsed":362,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"835ea9a7-92e0-441e-8737-fdba7e92e906"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 39.3 ms, sys: 22 µs, total: 39.4 ms\n","Wall time: 39.4 ms\n","(32, 96, 96, 3)\n","(32, 7)\n"]}]},{"cell_type":"code","source":["# Visualizar una imagen de muestra\n","print(Le.inverse_transform(np.argmax(label , axis = 1))[0])\n","plt.imshow((image[0].numpy()/255).reshape(96 , 96 , 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"yx2Q0En2CbaL","executionInfo":{"status":"ok","timestamp":1740338496123,"user_tz":180,"elapsed":214,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"9348ddf0-b208-4931-ed90-c8214f1a1931"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["fear\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fd6b2b43a50>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["# EfficientNet (Cnn)\n","from tensorflow.keras.applications import EfficientNetB2\n","\n","backbone = EfficientNetB2(\n","    input_shape=(96, 96, 3),\n","    include_top=False\n",")\n","\n","model = tf.keras.Sequential([\n","    backbone,\n","    tf.keras.layers.GlobalAveragePooling2D(),\n","    tf.keras.layers.Dropout(0.3),\n","    tf.keras.layers.Dense(128, activation='relu'),\n","    tf.keras.layers.Dense(7, activation='softmax')\n","])\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"SfYxTQwFCnzv","executionInfo":{"status":"ok","timestamp":1740338501478,"user_tz":180,"elapsed":3072,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"532f5473-b6c6-4b8c-e075-c5671fa4b581"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/keras-applications/efficientnetb2_notop.h5\n","\u001b[1m31790344/31790344\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"]},{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential_3\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_3\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ efficientnetb2 (\u001b[38;5;33mFunctional\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m, \u001b[38;5;34m3\u001b[0m, \u001b[38;5;34m1408\u001b[0m)          │       \u001b[38;5;34m7,768,569\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ global_average_pooling2d             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1408\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","│ (\u001b[38;5;33mGlobalAveragePooling2D\u001b[0m)             │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1408\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │         \u001b[38;5;34m180,352\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m)                   │             \u001b[38;5;34m903\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ efficientnetb2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Functional</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)          │       <span style=\"color: #00af00; text-decoration-color: #00af00\">7,768,569</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ global_average_pooling2d             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling2D</span>)             │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">180,352</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">903</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m7,949,824\u001b[0m (30.33 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">7,949,824</span> (30.33 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m7,882,249\u001b[0m (30.07 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">7,882,249</span> (30.07 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m67,575\u001b[0m (263.97 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">67,575</span> (263.97 KB)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["# Agrego  Optimizer , Loss y Metricasmodel.compile(\n","model.compile(\n","    optimizer=tf.keras.optimizers.Adam(learning_rate=0.001, beta_1=0.9, beta_2=0.999, epsilon=1e-07),\n","    loss = 'categorical_crossentropy',\n","    metrics=['accuracy' , tf.keras.metrics.Precision(name='precision'),tf.keras.metrics.Recall(name='recall')]\n",")"],"metadata":{"id":"C5Iyi0qTCryh","executionInfo":{"status":"ok","timestamp":1740338501486,"user_tz":180,"elapsed":5,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Entreno una primera vez para modificar un poco los pesos\n","history = model.fit(\n","    train_dataset,\n","    steps_per_epoch=len(Train_paths)//BATCH_SIZE,\n","    epochs=12,\n","    validation_data=val_dataset,\n","    validation_steps = len(Val_paths)//BATCH_SIZE,\n","    class_weight=class_weight\n",")\n","\n","#\"Apago\" backbone para evitar overfitting\n","model.layers[0].trainable = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"21UPOegKCwv9","executionInfo":{"status":"ok","timestamp":1740339393221,"user_tz":180,"elapsed":890502,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"202e7838-b02f-41e4-85f0-cbc4222a4571"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m176s\u001b[0m 93ms/step - accuracy: 0.3442 - loss: 3.0161 - precision: 0.5689 - recall: 0.1314 - val_accuracy: 0.4314 - val_loss: 1.5071 - val_precision: 0.6362 - val_recall: 0.2532\n","Epoch 2/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m105s\u001b[0m 81ms/step - accuracy: 0.4684 - loss: 2.4926 - precision: 0.6906 - recall: 0.2551 - val_accuracy: 0.5206 - val_loss: 1.2585 - val_precision: 0.7317 - val_recall: 0.3269\n","Epoch 3/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 84ms/step - accuracy: 0.5094 - loss: 2.2677 - precision: 0.6940 - recall: 0.3124 - val_accuracy: 0.4881 - val_loss: 1.3518 - val_precision: 0.6682 - val_recall: 0.3104\n","Epoch 4/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m54s\u001b[0m 80ms/step - accuracy: 0.5303 - loss: 2.1186 - precision: 0.7194 - recall: 0.3470 - val_accuracy: 0.5156 - val_loss: 1.2541 - val_precision: 0.6893 - val_recall: 0.3848\n","Epoch 5/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 82ms/step - accuracy: 0.5499 - loss: 2.0449 - precision: 0.7083 - recall: 0.3750 - val_accuracy: 0.5312 - val_loss: 1.2605 - val_precision: 0.6496 - val_recall: 0.3962\n","Epoch 6/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 83ms/step - accuracy: 0.5521 - loss: 2.0323 - precision: 0.7157 - recall: 0.3709 - val_accuracy: 0.5612 - val_loss: 1.1903 - val_precision: 0.7063 - val_recall: 0.4187\n","Epoch 7/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 83ms/step - accuracy: 0.5837 - loss: 1.9188 - precision: 0.7312 - recall: 0.4106 - val_accuracy: 0.5699 - val_loss: 1.1320 - val_precision: 0.6874 - val_recall: 0.4347\n","Epoch 8/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m58s\u001b[0m 86ms/step - accuracy: 0.5954 - loss: 1.8692 - precision: 0.7251 - recall: 0.4356 - val_accuracy: 0.5896 - val_loss: 1.1280 - val_precision: 0.6959 - val_recall: 0.4877\n","Epoch 9/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 122ms/step - accuracy: 0.5956 - loss: 1.8452 - precision: 0.7299 - recall: 0.4451 - val_accuracy: 0.5871 - val_loss: 1.0886 - val_precision: 0.7079 - val_recall: 0.4602\n","Epoch 10/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 81ms/step - accuracy: 0.6126 - loss: 1.7741 - precision: 0.7456 - recall: 0.4613 - val_accuracy: 0.6000 - val_loss: 1.0838 - val_precision: 0.7021 - val_recall: 0.4810\n","Epoch 11/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 122ms/step - accuracy: 0.6201 - loss: 1.7134 - precision: 0.7443 - recall: 0.4774 - val_accuracy: 0.5921 - val_loss: 1.0935 - val_precision: 0.7131 - val_recall: 0.4535\n","Epoch 12/12\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 82ms/step - accuracy: 0.6141 - loss: 1.7451 - precision: 0.7405 - recall: 0.4722 - val_accuracy: 0.5921 - val_loss: 1.1112 - val_precision: 0.6878 - val_recall: 0.4895\n"]}]},{"cell_type":"code","source":["# callbacks\n","checkpoint = tf.keras.callbacks.ModelCheckpoint(\"aaaa.weights.h5\",verbose=1,save_best_only=True,save_weights_only = True)\n","early_stop = tf.keras.callbacks.EarlyStopping(patience=4)\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"id":"55Ion5KOC112","executionInfo":{"status":"ok","timestamp":1740339393257,"user_tz":180,"elapsed":38,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"2f994fe3-b6fc-4c87-8b23-e210e92409e2"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential_3\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_3\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ efficientnetb2 (\u001b[38;5;33mFunctional\u001b[0m)          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m3\u001b[0m, \u001b[38;5;34m3\u001b[0m, \u001b[38;5;34m1408\u001b[0m)          │       \u001b[38;5;34m7,768,569\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ global_average_pooling2d             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1408\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","│ (\u001b[38;5;33mGlobalAveragePooling2D\u001b[0m)             │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1408\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │         \u001b[38;5;34m180,352\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m)                   │             \u001b[38;5;34m903\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ efficientnetb2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Functional</span>)          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)          │       <span style=\"color: #00af00; text-decoration-color: #00af00\">7,768,569</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ global_average_pooling2d             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GlobalAveragePooling2D</span>)             │                             │                 │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1408</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">180,352</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">903</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m23,714,324\u001b[0m (90.46 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">23,714,324</span> (90.46 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m181,255\u001b[0m (708.03 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">181,255</span> (708.03 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m7,768,569\u001b[0m (29.63 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">7,768,569</span> (29.63 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Optimizer params: \u001b[0m\u001b[38;5;34m15,764,500\u001b[0m (60.14 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Optimizer params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">15,764,500</span> (60.14 MB)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["# Entreno una segunda vez sin backbone  para que aprenda los patrones de la data\n","history = model.fit(\n","    train_dataset,\n","    steps_per_epoch=len(Train_paths)//BATCH_SIZE,\n","    epochs=8,\n","    callbacks=[checkpoint , early_stop],\n","    validation_data=val_dataset,\n","    validation_steps = len(Val_paths)//BATCH_SIZE,\n","    class_weight=class_weight\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GMo0_JOBC5Tf","executionInfo":{"status":"ok","timestamp":1740339863284,"user_tz":180,"elapsed":470025,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"bbea1c1b-97d1-41f2-fcbc-a75136908920"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step - accuracy: 0.6293 - loss: 1.6317 - precision: 0.7448 - recall: 0.4981\n","Epoch 1: val_loss improved from inf to 1.09933, saving model to aaaa.weights.h5\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m57s\u001b[0m 83ms/step - accuracy: 0.6293 - loss: 1.6317 - precision: 0.7448 - recall: 0.4981 - val_accuracy: 0.5921 - val_loss: 1.0993 - val_precision: 0.7047 - val_recall: 0.4894\n","Epoch 2/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step - accuracy: 0.6362 - loss: 1.6032 - precision: 0.7426 - recall: 0.4995\n","Epoch 2: val_loss improved from 1.09933 to 1.02981, saving model to aaaa.weights.h5\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 82ms/step - accuracy: 0.6363 - loss: 1.6031 - precision: 0.7426 - recall: 0.4995 - val_accuracy: 0.6254 - val_loss: 1.0298 - val_precision: 0.7109 - val_recall: 0.5393\n","Epoch 3/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step - accuracy: 0.6534 - loss: 1.5137 - precision: 0.7572 - recall: 0.5397\n","Epoch 3: val_loss did not improve from 1.02981\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m56s\u001b[0m 84ms/step - accuracy: 0.6534 - loss: 1.5137 - precision: 0.7572 - recall: 0.5397 - val_accuracy: 0.5918 - val_loss: 1.1052 - val_precision: 0.6883 - val_recall: 0.4997\n","Epoch 4/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step - accuracy: 0.6502 - loss: 1.5653 - precision: 0.7549 - recall: 0.5301\n","Epoch 4: val_loss did not improve from 1.02981\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 122ms/step - accuracy: 0.6502 - loss: 1.5653 - precision: 0.7549 - recall: 0.5301 - val_accuracy: 0.6232 - val_loss: 1.0465 - val_precision: 0.7069 - val_recall: 0.5297\n","Epoch 5/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step - accuracy: 0.6627 - loss: 1.4653 - precision: 0.7655 - recall: 0.5490\n","Epoch 5: val_loss improved from 1.02981 to 1.02627, saving model to aaaa.weights.h5\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 83ms/step - accuracy: 0.6627 - loss: 1.4653 - precision: 0.7655 - recall: 0.5490 - val_accuracy: 0.6215 - val_loss: 1.0263 - val_precision: 0.7099 - val_recall: 0.5243\n","Epoch 6/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step - accuracy: 0.6606 - loss: 1.4715 - precision: 0.7583 - recall: 0.5451\n","Epoch 6: val_loss improved from 1.02627 to 1.01788, saving model to aaaa.weights.h5\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 82ms/step - accuracy: 0.6607 - loss: 1.4715 - precision: 0.7583 - recall: 0.5451 - val_accuracy: 0.6250 - val_loss: 1.0179 - val_precision: 0.7154 - val_recall: 0.5359\n","Epoch 7/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step - accuracy: 0.6775 - loss: 1.4194 - precision: 0.7729 - recall: 0.5769\n","Epoch 7: val_loss did not improve from 1.01788\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m55s\u001b[0m 83ms/step - accuracy: 0.6776 - loss: 1.4194 - precision: 0.7729 - recall: 0.5769 - val_accuracy: 0.6046 - val_loss: 1.1057 - val_precision: 0.6962 - val_recall: 0.5153\n","Epoch 8/8\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step - accuracy: 0.6797 - loss: 1.3841 - precision: 0.7740 - recall: 0.5849\n","Epoch 8: val_loss did not improve from 1.01788\n","\u001b[1m672/672\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m53s\u001b[0m 80ms/step - accuracy: 0.6797 - loss: 1.3841 - precision: 0.7740 - recall: 0.5849 - val_accuracy: 0.6304 - val_loss: 1.0221 - val_precision: 0.7111 - val_recall: 0.5414\n"]}]},{"cell_type":"code","source":["#Testeo\n","\n","test_image_paths = list(test_path.glob(\"*/*\"))\n","test_image_paths = list(map(lambda x : str(x) , test_image_paths))\n","test_labels = list(map(lambda x : get_label(x) , test_image_paths))\n","\n","test_labels = Le.transform(test_labels)\n","test_labels = tf.keras.utils.to_categorical(test_labels)\n","\n","test_image_paths = tf.convert_to_tensor(test_image_paths)\n","test_labels = tf.convert_to_tensor(test_labels)\n","\n","def decode_image(image , label):\n","    image = tf.io.read_file(image)\n","    image = tf.io.decode_jpeg(image , channels = 3)\n","    image = tf.image.resize(image , [96 , 96] , method=\"bilinear\")\n","    return image , label\n","\n","test_dataset = (\n","     tf.data.Dataset\n","    .from_tensor_slices((test_image_paths, test_labels))\n","    .map(decode_image)\n","    .batch(BATCH_SIZE)\n",")"],"metadata":{"id":"xFD4GBX2DZK8","executionInfo":{"status":"ok","timestamp":1740339863965,"user_tz":180,"elapsed":678,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["# Dimensiones\n","image , label = next(iter(test_dataset))\n","print(image.shape)\n","print(label.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rz937BlKDiVv","executionInfo":{"status":"ok","timestamp":1740339863998,"user_tz":180,"elapsed":31,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"455ef8ea-f777-4b0a-acf4-0875ced8431c"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["(32, 96, 96, 3)\n","(32, 7)\n"]}]},{"cell_type":"code","source":["# Muestra\n","print(Le.inverse_transform(np.argmax(label , axis = 1))[0])\n","plt.imshow((image[0].numpy()/255).reshape(96 , 96 , 3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"KUUKSbOnDkW_","executionInfo":{"status":"ok","timestamp":1740339864172,"user_tz":180,"elapsed":172,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"e08f1568-fdee-4942-c1ff-9b7a5657ab24"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["happy\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fd6201e1410>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Evaluo el modelo\n","loss, acc, prec, rec = model.evaluate(test_dataset)\n","\n","print(\" Testing Acc : \" , acc)\n","print(\" Testing Precision \" , prec)\n","print(\" Testing Recall \" , rec)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nquh281ODl0y","executionInfo":{"status":"ok","timestamp":1740339874370,"user_tz":180,"elapsed":10200,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"29c889be-8542-4d25-c594-8e62da9c2137"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m225/225\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 43ms/step - accuracy: 0.7043 - loss: 0.8597 - precision: 0.7764 - recall: 0.6501\n"," Testing Acc :  0.6280301213264465\n"," Testing Precision  0.711058497428894\n"," Testing Recall  0.5437448024749756\n"]}]},{"cell_type":"code","source":["# Guardar modelo\n","model.save(\"FacialExpression.Model.h5\")\n","\n","\n","import pickle\n","\n","def save_object(obj , name):\n","    pickle_obj = open(f\"{name}.pck\",\"wb\")\n","    pickle.dump(obj, pickle_obj)\n","    pickle_obj.close()\n","\n","save_object(Le, \"LabelEncoder\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zQ1mYZIlDoc_","executionInfo":{"status":"ok","timestamp":1740339875261,"user_tz":180,"elapsed":889,"user":{"displayName":"Ignacio Andrés Schwindt","userId":"08587809665656452662"}},"outputId":"a0c0fa6d-3dae-4f6f-b47e-437b6e9db3d0"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}]}]}